name: Deploy application

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Verificar cÃ³digo
      uses: actions/checkout@v2

    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu' # See 'Supported distributions' for available options
        java-version: '17'

    - name: Generar archivo JAR
      run: mvn clean package -DskipTests
      env:
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        SERVER_PORT: ${{ secrets.SERVER_PORT }}
        AWS_S3_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
        AWS_S3_SECRET_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
        MAIL_HOST: ${{ secrets.MAIL_HOST }}
        MAIL_PORT: ${{ secrets.MAIL_PORT }}
        MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
        MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

    - name: Copiar archivo JAR a instancia EC2 2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "./target/mercadolibro-backend-1.0.0.jar"
        target: "/home/ec2-user/deploy"
          
    - name: Run Backend
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /usr/lib/jvm/java-17-amazon-corretto/bin &&
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }} &&
          export DB_USERNAME=${{ secrets.DB_USERNAME }} &&
          export DB_HOST=${{ secrets.DB_HOST }} &&
          export DB_PORT=${{ secrets.DB_PORT }} &&
          export DB_NAME=${{ secrets.DB_NAME }} &&
          export SERVER_PORT=${{ secrets.SERVER_PORT }} &&
          export AWS_S3_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY }} &&
          export AWS_S3_SECRET_KEY=${{ secrets.AWS_S3_SECRET_KEY }} &&
          export MAIL_HOST=${{ secrets.MAIL_HOST }} &&
          export MAIL_PORT=${{ secrets.MAIL_PORT }} &&
          export MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} &&
          export MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} &&
          export MERCADOPAGO_ACCESS_TOKEN=${{ secrets.MERCADOPAGO_ACCESS_TOKEN }} &&
          export FRONTEND_BASE_URL=${{ secrets.FRONTEND_BASE_URL }} &&
          export APP_NAME=${{ secrets.APP_NAME }} &&
          export OAUTH_FACEBOOK_CLIENT_ID=${{ secrets.OAUTH_FACEBOOK_CLIENT_ID }} &&
          export OAUTH_FACEBOOK_CLIENT_SECRET=${{ secrets.OAUTH_FACEBOOK_CLIENT_SECRET }} &&
          export OAUTH_GOOGLE_CLIENT_ID=${{ secrets.OAUTH_GOOGLE_CLIENT_ID }} &&
          export OAUTH_GOOGLE_CLIENT_SECRET=${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET }} &&
          echo "DB_PASSWORD=$DB_PASSWORD" >> ~/.bashrc &&
          echo "DB_USERNAME=$DB_USERNAME" >> ~/.bashrc &&
          echo "DB_HOST=$DB_HOST" >> ~/.bashrc &&
          echo "DB_PORT=$DB_PORT" >> ~/.bashrc &&
          echo "DB_NAME=$DB_NAME" >> ~/.bashrc &&
          echo "SERVER_PORT=$SERVER_PORT" >> ~/.bashrc &&
          sudo systemctl stop backend-app.service &&
          echo "Init service backend" &&
          sudo systemctl start backend-app.service
          ls -al
      
